buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://jitpack.io" }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }

    dependencies {
        classpath 'com.github.asbyth:ForgeGradle:8708bf3e01'
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.1.0"
group = "dev.userteemu.skydome"
archivesBaseName = "SkyDome"

sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker" // needed to run Essential in dev env
    clientJvmArgs += "-Dfml.coreMods.load=dev.userteemu.skydome.asm.plugin.FMLLoadingPlugin" // needed to use the fml plugin in dev env

    replaceIn "SkyDomeMain.java"
    replace "@MOD_VERSION@", project.version
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://repo.spongepowered.org/repository/maven-public' }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

dependencies {
    shadow "gg.essential:loader-launchwrapper:1.0.2"
    provided("gg.essential:Essential:1229-10809-SNAPSHOT") {
        exclude module: 'asm-commons'
        exclude module: 'asm-tree'
        exclude module: 'asm'
        exclude module: 'WaifUPnP'
    }
}

shadowJar {
    archiveBaseName.set(jar.archiveBaseName)
    archiveClassifier.set(jar.archiveClassifier)
    configurations = [project.configurations.shadow]
}

reobfJar {
    setJar(shadowJar.getArchiveFile())
}
tasks.reobfJar.dependsOn shadowJar
jar.enabled = false

jar {
    manifest {
        attributes(
                "FMLCorePlugin": "dev.userteemu.skydome.asm.plugin.FMLLoadingPlugin",
                "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
                "TweakOrder": "0",
                "FMLCorePluginContainsFMLMod": true,
                "ModSide": "CLIENT",
                'FMLAT': 'skydome_at.cfg'
        )
    }
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}